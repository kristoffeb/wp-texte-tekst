@mixin media($media) {
    @media only screen and #{$media} {
        @content;
    }
}

@mixin screen-reader-text() {
    position: absolute;
	margin: -1px;
	padding: 0;
	height: 1px;
	width: 1px;
	overflow: hidden;
	clip: rect(0 0 0 0);
	border: 0;
}

@mixin icons($symbol, $set: 'linearicons', $place: 'before', $color: '', $margin: '0 12px') {
	&::#{$place} {
		font-family: $set;
		content: $symbol;
		margin: unquote($margin);

		@if $color != '' {
			color: $color;
		}
	}
}

@function rem($pixels, $context: 16) {
    @if (unitless($pixels)) {
        $pixels: $pixels * 1px;
    }

    @if (unitless($context)) {
        $context: $context * 1px;
    }

    @return $pixels / $context * 1rem;
}

@mixin flex() {
    display: flex;
	flex-direction: row;
	flex-wrap: wrap;
    align-items: center;
}

@mixin main-color() {
    .lang-fr & {
        color: $sky;
    }
    .lang-da & {
        color: $orange;
    }
    .lang-de & {
        color: $mint;
    }
}

@mixin main-bg-color() {
    .lang-fr & {
        background-color: $sky;
    }
    .lang-da & {
        background-color: $orange;
    }
    .lang-de & {
        background-color: $mint;
    }
}

@mixin shadow( $offset: 'normal' ) {
    .lang-fr & {
        @if $offset == 'normal' {
            box-shadow: (- rem(15)) rem(20) $sky, rem(15) rem(35) $navy;
        }
        @if $offset == 'small' {
            box-shadow: (- rem(7)) rem(10) $sky, rem(7) rem(20) $navy;
        }
    }
    .lang-da & {
        @if $offset == 'normal' {
            box-shadow: (- rem(15)) rem(20) $orange, rem(15) rem(35) $navy;
        }
        @if $offset == 'small' {
            box-shadow: (- rem(7)) rem(10) $orange, rem(7) rem(20) $navy;
        }
    }
    .lang-de & {
        @if $offset == 'normal' {
            box-shadow: (- rem(15)) rem(20) $mint, rem(15) rem(35) $navy;
        }
        @if $offset == 'small' {
            box-shadow: (- rem(7)) rem(10) $mint, rem(7) rem(20) $navy;
        }
    }
}
